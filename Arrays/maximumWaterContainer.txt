var maxArea = function(height) {
   let maxValue=0;
   for(let i=0;i<height.length;i++){
       for(let j=i+1;j<height.length;j++){
           let heights=Math.min(height[j],height[i]);
           let width=j-i;
           let area=heights*width;
           maxValue=Math.max(maxValue,area);
       }
   }
   return maxValue; 
};


Time complexity:O(n^2)
Space complexity:O(1)

optimal soultion:-

var maxArea = function(height) {
    let p1 = 0, p2 = height.length - 1, maxArea = 0;

  while(p1 < p2) {
    const heights = Math.min(height[p1], height[p2]);
    const width = p2 - p1;
    const area = heights * width;
    maxArea = Math.max(maxArea, area);
    
    if(height[p1] <= height[p2]) {
      p1++;
    } else {
      p2--;
    }
  }

  return maxArea;
};


Time complexity:O(n)
Space complexity:O(1)